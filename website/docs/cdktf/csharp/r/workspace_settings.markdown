---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_workspace_setting"
description: |-
  Manages workspace settings.
---


<!-- Please do not edit this file, it is generated. -->
# tfe_workspace_settings

Manages or reads execution mode and agent pool settings for a workspace. This also interacts with the organization's default values for several settings, which can be managed with [tfe_organization_default_settings](organization_default_settings.html). If other resources need to identify whether a setting is a default or an explicit value set for the workspace, you can refer to the read-only `Overwrites` argument.

## Example Usage

Basic usage:

```csharp
using Constructs;
using HashiCorp.Cdktf;
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
using Gen.Providers.Tfe;
class MyConvertedCode : TerraformStack
{
    public MyConvertedCode(Construct scope, string name) : base(scope, name)
    {
        var tfeOrganizationTestOrganization = new Organization.Organization(this, "test-organization", new OrganizationConfig {
            Email = "admin@company.com",
            Name = "my-org-name"
        });
        var tfeWorkspaceTest = new Workspace.Workspace(this, "test", new WorkspaceConfig {
            Name = "my-workspace-name",
            Organization = Token.AsString(tfeOrganizationTestOrganization.Name)
        });
        new WorkspaceSettings.WorkspaceSettings(this, "test-settings", new WorkspaceSettingsConfig {
            ExecutionMode = "local",
            WorkspaceId = Token.AsString(tfeWorkspaceTest.Id)
        });
    }
}
```

With `ExecutionMode` of `Agent`:

```csharp
using Constructs;
using HashiCorp.Cdktf;
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
using Gen.Providers.Tfe;
class MyConvertedCode : TerraformStack
{
    public MyConvertedCode(Construct scope, string name) : base(scope, name)
    {
        var tfeOrganizationTestOrganization = new Organization.Organization(this, "test-organization", new OrganizationConfig {
            Email = "admin@company.com",
            Name = "my-org-name"
        });
        var tfeWorkspaceTest = new Workspace.Workspace(this, "test", new WorkspaceConfig {
            Name = "my-workspace-name",
            Organization = Token.AsString(tfeOrganizationTestOrganization.Name)
        });
        var tfeAgentPoolTestAgentPool = new AgentPool.AgentPool(this, "test-agent-pool", new AgentPoolConfig {
            Name = "my-agent-pool-name",
            Organization = Token.AsString(tfeOrganizationTestOrganization.Name)
        });
        var tfeAgentPoolAllowedWorkspacesTest =
        new AgentPoolAllowedWorkspaces.AgentPoolAllowedWorkspaces(this, "test_3", new AgentPoolAllowedWorkspacesConfig {
            AgentPoolId = Token.AsString(tfeAgentPoolTestAgentPool.Id),
            AllowedWorkspaceIds = new [] { Token.AsString(tfeWorkspaceTest.Id) }
        });
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        tfeAgentPoolAllowedWorkspacesTest.OverrideLogicalId("test");
        new WorkspaceSettings.WorkspaceSettings(this, "test-settings", new WorkspaceSettingsConfig {
            AgentPoolId = Token.AsString(tfeAgentPoolAllowedWorkspacesTest.AgentPoolId),
            ExecutionMode = "agent",
            WorkspaceId = Token.AsString(tfeWorkspaceTest.Id)
        });
    }
}
```

This resource may be used as a data source when no optional arguments are defined:

```csharp
using Constructs;
using HashiCorp.Cdktf;
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
using Gen.Providers.Tfe;
class MyConvertedCode : TerraformStack
{
    public MyConvertedCode(Construct scope, string name) : base(scope, name)
    {
        var dataTfeWorkspaceTest = new DataTfeWorkspace.DataTfeWorkspace(this, "test", new DataTfeWorkspaceConfig {
            Name = "my-workspace-name",
            Organization = "my-org-name"
        });
        var tfeWorkspaceSettingsTest =
        new WorkspaceSettings.WorkspaceSettings(this, "test_1", new WorkspaceSettingsConfig {
            WorkspaceId = Token.AsString(dataTfeWorkspaceTest.Id)
        });
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        tfeWorkspaceSettingsTest.OverrideLogicalId("test");
        new TerraformOutput(this, "workspace-explicit-local-execution", new TerraformOutputConfig {
            Value = Fn.Alltrue(Token.AsAny(new [] { Op.Eq(tfeWorkspaceSettingsTest.ExecutionMode, "local"), PropertyAccess(tfeWorkspaceSettingsTest.Overwrites, new [] { "0", "\"execution_mode\"" }) }))
        });
    }
}
```

## Argument Reference

The following arguments are supported:

* `WorkspaceId` - (Required) ID of the workspace.
* `AgentPoolId` - (Optional) The ID of an agent pool to assign to the workspace. Requires `ExecutionMode`
  to be set to `Agent`. This value _must not_ be provided if `ExecutionMode` is set to any other value.
* `ExecutionMode` - (Optional) Which [execution mode](https://developer.hashicorp.com/terraform/cloud-docs/workspaces/settings#execution-mode)
  to use. Using Terraform Cloud, valid values are `Remote`, `Local` or `Agent`. Using Terraform Enterprise, only `Remote` and `Local` execution modes are valid. When set to `Local`, the workspace will be used for state storage only. **Important:** If you omit this attribute, the resource configures the workspace to use your organization's default execution mode (which in turn defaults to `Remote`), removing any explicit value that might have previously been set for the workspace.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `Id` - The workspace ID.
* `Overwrites` - Can be used to check whether a setting is currently inheriting its value from another resource.
  - `ExecutionMode` - Set to `True` if the execution mode of the workspace is being determined by the setting on the workspace itself. It will be `False` if the execution mode is inherited from another resource (e.g. the organization's default execution mode)
  - `AgentPool` - Set to `True` if the agent pool of the workspace is being determined by the setting on the workspace itself. It will be `False` if the agent pool is inherited from another resource (e.g. the organization's default agent pool)

## Import

Workspaces can be imported; use `<WORKSPACE ID>` or `<ORGANIZATION NAME>/<WORKSPACE NAME>` as the
import ID. For example:

```shell
terraform import tfe_workspace_settings.test ws-CH5in3chf8RJjrVd
```

```shell
terraform import tfe_workspace_settings.test my-org-name/my-wkspace-name
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-21ae5bfc5685737786e686595d5f2c56dda05cf11e96b5c4f9cfd31f697e712f -->