---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_policy_set"
description: |-
  Get information on organization policy sets.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: tfe_policy_set

This data source is used to retrieve a policy set defined in a specified organization.

## Example Usage

For workspace policies:

```csharp
using Constructs;
using HashiCorp.Cdktf;
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
using Gen.Providers.Tfe;
class MyConvertedCode : TerraformStack
{
    public MyConvertedCode(Construct scope, string name) : base(scope, name)
    {
        new DataTfePolicySet.DataTfePolicySet(this, "test", new DataTfePolicySetConfig {
            Name = "my-policy-set-name",
            Organization = "my-org-name"
        });
    }
}
```

## Argument Reference

The following arguments are supported:

* `Name` - (Required) Name of the policy set.
* `Organization` - (Required) Name of the organization.

## Attributes Reference

* `Id` - The ID of the policy set.
* `Organization` - Name of the organization.
* `Name` - Name of the policy set.
* `Description` - Description of the policy set.
* `Global` - Whether or not the policy set applies to all workspaces in the organization.
* `Kind` - The policy-as-code framework for the policy. Valid values are "sentinel" and "opa".
* `AgentEnabled` - Whether or not the policy set is run as a policy evaluation within the agent. True by default for all "opa" policy sets.
* `PolicyToolVersion` - The policy tool version to run the evaluation against.
* `Overridable` - Whether users can override this policy when it fails during a run. Only valid for OPA policies.
* `WorkspaceIds` - IDs of the workspaces that use the policy set.
* `ExcludedWorkspaceIds` - IDs of the workspaces that do not use the policy set.
* `ProjectIds` - IDs of the projects that use the policy set.
* `PolicyIds` - IDs of the policies attached to the policy set.
* `PoliciesPath` - The sub-path within the attached VCS repository when using `VcsRepo`.
* `VcsRepo` - Settings for the workspace's VCS repository.

The `VcsRepo` block contains:

* `Identifier` - A reference to your VCS repository in the format `<vcs organization>/<repository>`
  where `<vcs organization>` and `<repository>` refer to the organization and repository in your VCS
  provider.
* `Branch` - The repository branch that Terraform will execute from.
* `IngressSubmodules` - Indicates whether submodules should be fetched when
  cloning the VCS repository.
* `OauthTokenId` - OAuth token ID of the configured VCS connection.


<!-- cache-key: cdktf-0.17.0-pre.15 input-d02c3079dfc63899f78fd83cad73af0b541d3dfa9605f525b0e217acf3e5f6c6 -->