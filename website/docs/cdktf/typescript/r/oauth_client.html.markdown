---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_oauth_client"
description: |-
  Manages OAuth clients.
---


<!-- Please do not edit this file, it is generated. -->
# tfe_oauth_client

An OAuth Client represents the connection between an organization and a VCS
provider.

-> **Note:** This resource does not currently support creation of Azure DevOps Services OAuth clients.

## Example Usage

Basic usage:

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as tfe from "./.gen/providers/tfe";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new tfe.oauthClient.OauthClient(this, "test", {
      apiUrl: "https://api.github.com",
      httpUrl: "https://github.com",
      name: "my-github-oauth-client",
      oauthToken: "my-vcs-provider-token",
      organization: "my-org-name",
      serviceProvider: "github",
    });
  }
}

```

#### Azure DevOps Server Usage

See [documentation for TFC/E setup](https://developer.hashicorp.com/terraform/cloud-docs/vcs/azure-devops-server).

**Note:** This resource requires a private key when creating Azure DevOps Server OAuth clients.

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as tfe from "./.gen/providers/tfe";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new tfe.oauthClient.OauthClient(this, "test", {
      apiUrl: "https://ado.example.com",
      httpUrl: "https://ado.example.com",
      name: "my-ado-oauth-client",
      oauthToken: "my-vcs-provider-token",
      organization: "my-org-name",
      privateKey:
        "-----BEGIN RSA PRIVATE KEY-----\ncontent\n-----END RSA PRIVATE KEY-----\n",
      serviceProvider: "ado_server",
    });
  }
}

```

#### BitBucket Server Usage

See [documentation for TFC/E setup](https://developer.hashicorp.com/terraform/cloud-docs/vcs/bitbucket-server).

When using BitBucket Server, you must use three required fields: `key`, `secret`, `rsaPublicKey`.


```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as tfe from "./.gen/providers/tfe";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new tfe.oauthClient.OauthClient(this, "test", {
      apiUrl: "https://bbs.example.com",
      httpUrl: "https://bss.example.com",
      key: "<consumer key>",
      name: "my-bbs-oauth-client",
      organization: "my-org-name",
      rsaPublicKey:
        "-----BEGIN PUBLIC KEY-----\ncontent\n-----END PUBLIC KEY-----\n",
      secret:
        "-----BEGIN RSA PRIVATE KEY-----\ncontent\n-----END RSA PRIVATE KEY-----\n",
      serviceProvider: "bitbucket_server",
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Optional) Display name for the OAuth Client. Defaults to the `serviceProvider` if not supplied.
* `organization` - (Optional) Name of the organization. If omitted, organization must be defined in the provider config.
* `apiUrl` - (Required) The base URL of your VCS provider's API (e.g.
  `https://apiGithubCom` or `https://gheExampleCom/api/v3`).
* `httpUrl` - (Required) The homepage of your VCS provider (e.g.
  `https://githubCom` or `https://gheExampleCom`).
* `oauthToken` - The token string you were given by your VCS provider, e.g. `ghpXxxxxxxxxxxxxxx` for a GitHub personal access token. For more information on how to generate this token string for your VCS provider, see the [Create an OAuth Client](https://developer.hashicorp.com/terraform/cloud-docs/api-docs/oauth-clients#create-an-oauth-client) documentation.
* `privateKey` - (Required for `adoServer`) The text of the private key associated with your Azure DevOps Server account
* `key` - The OAuth Client key can refer to a Consumer Key, Application Key,
  or another type of client key for the VCS provider.
* `secret` - (Required for `bitbucketServer`) The OAuth Client secret is used for BitBucket Server, this secret is the
  the text of the SSH private key associated with your BitBucket Server
Application Link.
* `rsaPublicKey` - (Required for `bitbucketServer`) Required for BitBucket
  Server in conjunction with the secret. Not used for any other providers. The
text of the SSH public key associated with your BitBucket Server Application
Link.
* `serviceProvider` - (Required) The VCS provider being connected with. Valid
  options are `adoServer`, `adoServices`, `bitbucketHosted`, `bitbucketServer`, `github`, `githubEnterprise`, `gitlabHosted`,
  `gitlabCommunityEdition`, or `gitlabEnterpriseEdition`.

## Attributes Reference

* `id` - The ID of the OAuth client.
* `oauthTokenId` - The ID of the OAuth token associated with the OAuth client.

<!-- cache-key: cdktf-0.17.0-pre.15 input-0dea494ef76c038939d94b5ae6a0e741e36a87509a350f558cd11d098bf1bde9 -->